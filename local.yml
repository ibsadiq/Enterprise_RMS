version: "3"

volumes:
  request_management_system_local_postgres_data: {}
  request_management_system_local_postgres_data_backups: {}
  request_management_system_local_traefik: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: request_management_system_local_django
    container_name: request_management_system_local_django
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend/:/app:z
    env_file:
      - ./.envs/.local/backend/.django
      - ./.envs/.local/backend/.postgres
    command: /start
    user: "1000:1000"

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: request_management_system_production_postgres
    container_name: request_management_system_local_postgres
    volumes:
      - request_management_system_local_postgres_data:/var/lib/postgresql/data
      - request_management_system_local_postgres_data_backups:/backups
    env_file:
      - ./.envs/.local/backend/.postgres

  redis:
    image: redis:6
    container_name: request_management_system_local_redis

  celeryworker:
    <<: *django
    image: request_management_system_local_celeryworker
    container_name: request_management_system_local_celeryworker
    depends_on:
      - redis
      - postgres
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: request_management_system_local_celerybeat
    container_name: request_management_system_local_celerybeat
    depends_on:
      - redis
      - postgres
    command: /start-celerybeat

  flower:
    <<: *django
    image: request_management_system_local_flower
    container_name: request_management_system_local_flower
    command: /start-flower

  node:
    build:
      context: .
      dockerfile: ./compose/local/node/Dockerfile
    image: request_management_system_local_node
    container_name: request_management_system_local_node
    depends_on:
      - django
    volumes:
      - ./frontend/:/app:z
      # http://jdlm.info/articles/2016/03/06/lessons-building-node-app-docker.html
      - /app/node_modules
    command: /start

  traefik:
    build:
      context: .
      dockerfile: ./compose/local/traefik/Dockerfile
    image: request_management_system_local_traefik
    container_name: request_management_system_local_traefik
    depends_on:
      - django
    volumes:
      - request_management_system_local_traefik:/etc/traefik/acme
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
      - "5555:5555"
      - "8001:8001"
